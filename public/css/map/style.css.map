{"version":3,"sources":["4_common/blocks/_defaultCnt.scss","4_common/_common.scss","1_configs/_functions.scss","../bower_components/meyer-reset/stylesheets/_meyer-reset.scss","4_common/_sprite.scss","4_common/blocks/_header.scss","style.css","variables.scss","../bower_components/bootstrap/scss/mixins/_grid.scss"],"names":[],"mappings":"AAoCE,sBACE,yBACA,gBAAgB,CChCpB,kBACE,qBAAY,CDqCZ,qBChCD,cAAW,CD+CP,uBCzCJ,SAAS,CCFT,WACI,qBACA,uCACA,oOAIA,kBACA,gBACA,iCAAgB,CATpB,WACI,qBACA,oCACA,wNAIA,kBACA,gBACA,iCAAgB,CATpB,WACI,qBACA,qCACA,4NAIA,kBACA,oBACA,iCAAgB,CATpB,WACI,qBACA,wCACA,wOAIA,kBACA,gBACA,iCAAgB,CCpBnB,2ZACE,SACA,UACA,SAEA,aACA,uBAAgB,CAIlB,8EACE,aAAS,CAKX,MACE,eAAY,CAEd,aACE,WAAQ,CAGR,oDACE,WACA,YAAS,CC8CX,KAnBF,gDALA,wBAVA,UAIA,UAvB8B,CCvBhC,QACC,gBACA,8CACA,cAAS,CAIT,YACC,iBAAY,CACZ,gBACC,qBACA,eACA,iBACA,gBACA,cACA,yBACA,YACA,+BAAA,AAAY,sBAAA,CLqCb,iBCtCD,aAAO,CIEL,sBACC,UAAS,CAEV,gCACC,gBAAa,CLpBhB,gBACG,iBACA,qBACA,0BAAqB,CAEvB,gBACE,eACA,oBAAgB,CAElB,gBACE,iBACA,uBAAiB,CAEnB,gCAEE,eACA,mBACA,gBAAa,CAEf,gDACE,eACA,gBAAa,CAEf,eACE,eACA,iBACA,kBAAe,CAGjB,mBACE,cACA,eACA,oBAAO,CAET,gBAGE,sBAEA,iBACA,qBAAgB,CASlB,eACE,iBAAY,CAIX,qBACE,yBAAiB,CC/CxB,IACC,cAEA,eAAY,CAEb,EAEC,qBAEA,6BAAA,AAAY,oBAAA,CAEb,WACC,WACA,cACA,UAAO,CKwKR,ULpKG,YACD,cACA,sCACA,eACA,aMnBM,CNqBR,6BACC,iBO9BC,iBACA,kBP+BA,kBACA,kBMhCkB,CNqCpB,SACC,oBAAA,AACA,oBADA,AACA,aAAA,4BAAA,AACA,6BADA,AACA,0BADA,AACA,sBAAA,eAAY,CAEb,UACC,kBACE,mBAAA,AAAM,kBAAN,AAAM,aAAA,CAET,QACG,mBAAA,AAAM,kBAAN,AAAM,aAAA,CAAA","file":"../style.css","sourcesContent":[".default-cnt{\r\n\t\r\n\tul{\r\n    margin-left: 10px;\r\n    list-style-type: disc;\r\n    list-style-position: inside;\r\n  }\r\n  li{\r\n    font-size: 14px;\r\n    letter-spacing: .02em;\r\n  }\r\n  ol{\r\n    margin-left: 10px;\r\n    list-style-type: decimal;\r\n  }\r\n  h1,h2{\r\n   /*  font-family: $bold; */\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n  }\r\n  h3,h4,h5{\r\n    font-size: 20px;\r\n    line-height: 21px;\r\n  }\r\n  p{\r\n    font-size: 14px;\r\n    letter-spacing: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  table{\r\n    margin: 10px 0;\r\n    max-width: 100%;\r\n    width: auto !important;\r\n  }\r\n  td {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n    padding: 10px 5px;\r\n    vertical-align: middle;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  strong,\r\n  b{\r\n   /* font-family: $bold; */\r\n  } \r\n  i{\r\n    font-style: italic;\r\n  }\r\n  a{\r\n    color: inherit;\r\n     &:hover{\r\n       text-decoration: underline;     \r\n     }\r\n     &:focus{\r\n       outline: none;\r\n     }\r\n\r\n  }\r\n}\r\n","@import 'sprite';\r\n@include sprites($spritesheet-sprites); //Use for sprites\r\n@import 'elements/elements';\r\n@import 'blocks/blocks';\r\n@import 'responsive'; \r\n\r\n*{\r\n \tbox-sizing: border-box;\r\n }\r\n\r\nimg{\r\n\tdisplay: block;\r\n\tmax-width: 100%;\r\n\tmax-height: 100%;\r\n}\r\na{\r\n\tcolor: inherit;\r\n\ttext-decoration: none;\r\n\toutline: none;\r\n\ttransition: color 0.3s;\r\n}\r\n.clr:after{\r\n\tcontent:'';\r\n\tdisplay: table;\r\n\tclear: both;\r\n}\r\nhtml,\r\nbody{\r\n  \theight: 100%;\r\n \tline-height: 1;\r\n \tfont-family: $base-font;\r\n \tfont-size: 18px;\r\n \tcolor: $c-txt;\r\n}\r\n.container{\r\n\tmax-width: $width-container + ($padding-container * 2);\r\n \t@include make-container(); /* align center, add default padding*/\r\n \tpadding-left: $padding-container;\r\n \tpadding-right: $padding-container;\r\n}\r\n\r\n\r\n/* footer to bottom of page */\r\n.wrapper {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmin-height: 100%;\r\n}\r\n.cnt-wrap {\r\n\tposition: relative;\r\n  \tflex: 1 0 auto;\r\n}\r\n.footer {\r\n  \tflex: 0 0 auto;\r\n}\r\n/* end footer to bottom of page */\r\n\r\n\r\n@media screen and (max-width: 1200px){\r\n\r\n}","// Functions \r\n\r\n//Добавить\r\n//- вывод буллета для одного элемента списка\r\n//- добавление шрифта по моему стандарту\r\n//- расчет и вывод размеров блока с учетом размера, отступов и границ\r\n\r\n\r\n// Добавление шрифтов\r\n// В папке шрифтов должны лежать файлы шрифта в формате .eot, .woff, .ttf и .svg\r\n// Переменные:\r\n// $font-file - название файлов шрифтов\r\n// $font-name - название по которому пото будем обращатся к шрифту (по умолчанию = $font-file)\r\n// $font-style - стиль шрифта (по умолчанию - normal)\r\n// $font-weight - вес шрифта (по умолчанию - normal)\r\n@mixin add-font($font-file, $font-name:$font-file, $font-style:normal, $font-weight:normal){\r\n\t@font-face {\r\n    \tfont-family: $font-name;\r\n    \tsrc: url($font-file +'.eot');\r\n    \tsrc: url($font-file +'.eot?#iefix') format('embedded-opentype'), //IE fix\r\n    \turl($font-file + '.svg') format('svg'), // .svg помещен сюда и записан в таком формате, а не name.svg#name для обеспечения сглаживания в Chrome и ему подобных браузерах.\r\n        url($font-file + '.woff') format('woff'),\r\n        url($font-file + '.ttf') format('truetype');         \t\r\n    \tfont-style: $font-style;\r\n    \tfont-weight: $font-weight;\r\n    \ttext-rendering: optimizeLegibility;\r\n\t}\r\n}\r\n\r\n//Add background gradient from $start-color, to $finish-color\r\n\r\n@mixin bg-gradient($start-color, $finish-color) {\r\n\tbackground: -moz-linear-gradient(center top, $start-color 0px, $finish-color 100%) 0 0 repeat;\r\n    background:-webkit-linear-gradient($start-color, $finish-color) 0 0 repeat;\r\n    background:-ms-linear-gradient($start-color, $finish-color) 0 0 repeat;\r\n    background:-o-linear-gradient($start-color, $finish-color) 0 0 repeat;\r\n    background:linear-gradient($start-color, $finish-color) 0 0 repeat;\r\n}\r\n\r\n\r\n//Set border radius\r\n@mixin border-radius($px) {\r\n\t-webkit-border-radius: $px;\r\n    -moz-border-radius: $px;\r\n    border-radius: $px;\r\n}\r\n\r\n@mixin bg-img($img, $size: 'cover', $repeat: no-repeat){\r\n\tbackground: url('../img/' + $img) $repeat;\r\n\t@include background-size($size);\r\n}\r\n\r\n@function em($target, $context: $base-font-size) {\r\n\t@if $target == 0 { @return 0 }\r\n\t@return $target / $context + 0em;\r\n}\r\n\r\n@function per($value, $context: $base-width){\r\n\t@if $value == 0 { @return 0}\r\n\t@return $value / $context * 100%;\r\n}\r\n\r\n// Add dot at main menu\r\n@mixin add-dot($color, $content) {\r\n        content: $content;\r\n        font-family: \"ExoBold\";\r\n        color: $color;\r\n        font-size: 30px;\r\n        line-height: 0px;\r\n        top: 4px;\r\n        position: relative;\r\n        left: -6px;\r\n}","// http://meyerweb.com/eric/tools/css/reset/\n// v2.0 | 20110126\n// License: none (public domain)\n\n@mixin meyer-reset {\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  // HTML5 display-role reset for older browsers\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  q {\n    &:before, &:after {\n      content: \"\";\n      content: none;\n    }\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n}\n\n@include meyer-reset;\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$s-i-name: 's-i';\n$s-i-x: 0px;\n$s-i-y: 0px;\n$s-i-offset-x: 0px;\n$s-i-offset-y: 0px;\n$s-i-width: 1px;\n$s-i-height: 1px;\n$s-i-total-width: 1px;\n$s-i-total-height: 1px;\n$s-i-image: '../img/sprites/sprite.png';\n$s-i: (0px, 0px, 0px, 0px, 1px, 1px, 1px, 1px, '../img/sprites/sprite.png', 's-i', );\n$spritesheet-width: 1px;\n$spritesheet-height: 1px;\n$spritesheet-image: '../img/sprites/sprite.png';\n$spritesheet-sprites: ($s-i, );\n$spritesheet: (1px, 1px, '../img/sprites/sprite.png', $spritesheet-sprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n",".header{\r\n\tbackground: $c-inverse;\r\n\tbox-shadow: 0px 2px 7.68px 0.32px rgba(0, 0, 0, 0.11);\r\n\tpadding: 35px 0;\r\n\t&-container{\r\n\t\t@extend .container;\r\n\t}\r\n\t&-nav{\r\n\t\ttext-align: center;\r\n\t\t&-lnk{\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tline-height: 24px;\r\n\t\t\tfont-weight: 600;\r\n\t\t\tcolor:$c-nav;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tpadding: 5px;\r\n\t\t\ttransition: opacity .2s;\r\n\t\t\t&:hover{\r\n\t\t\t\topacity: .7;\r\n\t\t\t}\r\n\t\t\t&+.header-nav-lnk{\r\n\t\t\t\tmargin-left: 35px;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}",".default-cnt td,table{border-collapse:collapse;border-spacing:0}*,.default-cnt td{box-sizing:border-box}.default-cnt img,img{max-width:100%}.default-cnt a:focus,a{outline:0}@font-face{font-family:OpenSans;src:url(../fonts/OpenSans-Regular.eot);src:url(../fonts/OpenSans-Regular.eot?#iefix) format(\"embedded-opentype\"),url(../fonts/OpenSans-Regular.svg) format(\"svg\"),url(../fonts/OpenSans-Regular.woff) format(\"woff\"),url(../fonts/OpenSans-Regular.ttf) format(\"truetype\");font-style:normal;font-weight:400;text-rendering:optimizeLegibility}@font-face{font-family:OpenSans;src:url(../fonts/OpenSans-Bold.eot);src:url(../fonts/OpenSans-Bold.eot?#iefix) format(\"embedded-opentype\"),url(../fonts/OpenSans-Bold.svg) format(\"svg\"),url(../fonts/OpenSans-Bold.woff) format(\"woff\"),url(../fonts/OpenSans-Bold.ttf) format(\"truetype\");font-style:normal;font-weight:700;text-rendering:optimizeLegibility}@font-face{font-family:OpenSans;src:url(../fonts/OpenSans-Light.eot);src:url(../fonts/OpenSans-Light.eot?#iefix) format(\"embedded-opentype\"),url(../fonts/OpenSans-Light.svg) format(\"svg\"),url(../fonts/OpenSans-Light.woff) format(\"woff\"),url(../fonts/OpenSans-Light.ttf) format(\"truetype\");font-style:normal;font-weight:lighter;text-rendering:optimizeLegibility}@font-face{font-family:OpenSans;src:url(../fonts/OpenSans-Semibold.eot);src:url(../fonts/OpenSans-Semibold.eot?#iefix) format(\"embedded-opentype\"),url(../fonts/OpenSans-Semibold.svg) format(\"svg\"),url(../fonts/OpenSans-Semibold.woff) format(\"woff\"),url(../fonts/OpenSans-Semibold.ttf) format(\"truetype\");font-style:normal;font-weight:600;text-rendering:optimizeLegibility}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:\"\";content:none}.s-i{background-image:url(../img/sprites/sprite.png);background-position:0 0;width:1px;height:1px}.header{background:#fff;box-shadow:0 2px 7.68px .32px rgba(0,0,0,.11);padding:35px 0}.header-nav{text-align:center}.header-nav-lnk{display:inline-block;font-size:20px;line-height:24px;font-weight:600;color:#2e2e2e;text-transform:uppercase;padding:5px;transition:opacity .2s}.default-cnt a,a{color:inherit}.header-nav-lnk:hover{opacity:.7}.header-nav-lnk+.header-nav-lnk{margin-left:35px}.default-cnt ul{margin-left:10px;list-style-type:disc;list-style-position:inside}.default-cnt li{font-size:14px;letter-spacing:.02em}.default-cnt ol{margin-left:10px;list-style-type:decimal}.default-cnt h1,.default-cnt h2{font-size:24px;margin-bottom:20px;line-height:25px}.default-cnt h3,.default-cnt h4,.default-cnt h5{font-size:20px;line-height:21px}.default-cnt p{font-size:14px;letter-spacing:0;margin-bottom:15px}.default-cnt table{margin:10px 0;max-width:100%;width:auto!important}.default-cnt td{border:1px solid #ccc;padding:10px 5px;vertical-align:middle}.default-cnt i{font-style:italic}.default-cnt a:hover{text-decoration:underline}img{display:block;max-height:100%}a{text-decoration:none;transition:color .3s}.clr:after{content:'';display:table;clear:both}body,html{height:100%;line-height:1;font-family:OpenSans,Arial,sans-serif;font-size:18px;color:#555559}.container,.header-container{max-width:1520px;margin-left:auto;margin-right:auto;padding-left:40px;padding-right:40px}.wrapper{display:flex;flex-direction:column;min-height:100%}.cnt-wrap{position:relative;flex:1 0 auto}.footer{flex:0 0 auto}","// Bootstrap grid\r\n$enable-flex:               true;\r\n$enable-grid-classes:       false;\r\n$grid-gutter-width: 10px;\r\n\r\n//Base container\r\n$padding-container: 40px;\r\n$width-container:\t1440px;\r\n\r\n\r\n// Base color\r\n$c-btn: #286782;\r\n$c-nav: #2e2e2e;\r\n$c-txt: #555559;\r\n$c-inverse: #fff; ","/// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-container($gutter: $grid-gutter-width) {\n  margin-left: auto;\n  margin-right: auto;\n  padding-left:  ($gutter / 2);\n  padding-right: ($gutter / 2);\n  @if not $enable-flex {\n    @include clearfix();\n  }\n}\n\n\n// For each breakpoint, define the maximum width of the container in a media query\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint, $container-max-width in $max-widths {\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      max-width: $container-max-width;\n    }\n  }\n}\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  @if $enable-flex {\n    display: flex;\n    flex-wrap: wrap;\n  } @else {\n    @include clearfix();\n  }\n  margin-left:  ($gutter / -2);\n  margin-right: ($gutter / -2);\n}\n\n@mixin make-col-ready($size, $columns: $grid-columns, $gutter: $grid-gutter-width) {\n  position: relative;\n  min-height: 1px; // Prevent collapsing\n  padding-right: ($gutter / 2);\n  padding-left:  ($gutter / 2);\n\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we use `flex` values\n  // later on to override this initial width.\n  @if $enable-flex {\n    width: 100%;\n  }\n}\n\n@mixin make-col($size, $columns: $grid-columns, $gutter: $grid-gutter-width) {\n  @if $enable-flex {\n    flex: 0 0 percentage($size / $columns);\n    // Add a `max-width` to ensure content within each column does not blow out\n    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\n    // do not appear to require this.\n    max-width: percentage($size / $columns);\n  } @else {\n    float: left;\n    width: percentage($size / $columns);\n  }\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  margin-left: percentage($size / $columns);\n}\n\n@mixin make-col-push($size, $columns: $grid-columns) {\n  left: if($size > 0, percentage($size / $columns), auto);\n}\n\n@mixin make-col-pull($size, $columns: $grid-columns) {\n  right: if($size > 0, percentage($size / $columns), auto);\n}\n\n@mixin make-col-modifier($type, $size, $columns) {\n  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)\n  @if $type == push {\n    @include make-col-push($size, $columns);\n  } @else if $type == pull {\n    @include make-col-pull($size, $columns);\n  } @else if $type == offset {\n    @include make-col-offset($size, $columns);\n  }\n}\n"]}